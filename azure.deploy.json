{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.412.5873",
      "templateHash": "17215496391667075708"
    }
  },
  "parameters": {
    "location": {
      "type": "string"
    },
    "applicationName": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "resourceGroupName": {
      "type": "string"
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "vnet": {
      "type": "object"
    },
    "jumphostAdministratorPassword": {
      "type": "secureString"
    }
  },
  "functions": [],
  "variables": {
    "defaultTags": "[union(createObject('applicationName', parameters('applicationName'), 'environment', parameters('environment')), parameters('tags'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "NamingDeployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "suffix": {
            "value": [
              "[parameters('applicationName')]",
              "[parameters('environment')]"
            ]
          },
          "uniqueLength": {
            "value": 6
          },
          "uniqueSeed": {
            "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.412.5873",
              "templateHash": "6501618445231888067"
            }
          },
          "parameters": {
            "prefix": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "It is not recommended that you use prefix by azure you should be using a suffix for your resources."
              }
            },
            "suffix": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "It is recommended that you specify a suffix for consistency. Please use only lowercase characters when possible."
              }
            },
            "uniqueSeed": {
              "type": "string",
              "defaultValue": "[resourceGroup().id]",
              "metadata": {
                "description": "Custom seed value for the unique string to be created -defaults to resourceGroup Id."
              }
            },
            "uniqueLength": {
              "type": "int",
              "defaultValue": 4,
              "metadata": {
                "description": "Max length of the uniqueness suffix to be added"
              }
            },
            "useDashes": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Use dashes as separator where applicable"
              }
            },
            "useLowerCase": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Create names using lowercase letters"
              }
            }
          },
          "functions": [],
          "variables": {
            "uniquePart": "[substring(uniqueString(parameters('uniqueSeed')), 0, parameters('uniqueLength'))]",
            "delimiter": "[if(parameters('useDashes'), '-', '')]",
            "strPrefixJoined": "[if(empty(parameters('prefix')), '', format('{0}{1}', replace(replace(replace(string(parameters('prefix')), '[\"', ''), '\"]', ''), '\",\"', variables('delimiter')), variables('delimiter')))]",
            "strPrefix": "[if(parameters('useLowerCase'), toLower(variables('strPrefixJoined')), variables('strPrefixJoined'))]",
            "strSuffixJoined": "[if(empty(parameters('suffix')), '', format('{0}{1}', variables('delimiter'), replace(replace(replace(string(parameters('suffix')), '[\"', ''), '\"]', ''), '\",\"', variables('delimiter'))))]",
            "strSuffix": "[if(parameters('useLowerCase'), toLower(variables('strSuffixJoined')), variables('strSuffixJoined'))]",
            "placeholder": "[[****]",
            "nameTemplate": "[format('{0}{1}{2}', variables('strPrefix'), variables('placeholder'), variables('strSuffix'))]",
            "nameUniqueTemplate": "[format('{0}{1}{2}{3}{4}', variables('strPrefix'), variables('placeholder'), variables('strSuffix'), variables('delimiter'), variables('uniquePart'))]",
            "nameSafeTemplate": "[toLower(replace(variables('nameTemplate'), variables('delimiter'), ''))]",
            "nameUniqueSafeTemplate": "[toLower(replace(variables('nameUniqueTemplate'), variables('delimiter'), ''))]"
          },
          "resources": [],
          "outputs": {
            "names": {
              "type": "object",
              "value": {
                "analysisServicesServer": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'as'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'as')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'as'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'as')), 63))]",
                  "slug": "as"
                },
                "apiManagement": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'apim'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'apim')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'apim'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'apim')), 50))]",
                  "slug": "apim"
                },
                "appConfiguration": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'appcg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'appcg')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'appcg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'appcg')), 50))]",
                  "slug": "appcg"
                },
                "appServicePlan": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'plan'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'plan')), 40))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'plan'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'plan')), 40))]",
                  "slug": "plan"
                },
                "appService": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'app'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'app')), 60))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'app'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'app')), 60))]",
                  "slug": "app"
                },
                "applicationGateway": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'agw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'agw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'agw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'agw')), 80))]",
                  "slug": "agw"
                },
                "applicationInsights": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'appi'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'appi')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'appi'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'appi')), 260))]",
                  "slug": "appi"
                },
                "applicationSecurityGroup": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asg')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asg')), 80))]",
                  "slug": "asg"
                },
                "automationAccount": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'aa'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'aa')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aa'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aa')), 50))]",
                  "slug": "aa"
                },
                "automationCertificate": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'aacert'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'aacert')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aacert'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aacert')), 128))]",
                  "slug": "aacert"
                },
                "automationCredential": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'aacred'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'aacred')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aacred'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aacred')), 128))]",
                  "slug": "aacred"
                },
                "automationRunbook": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'aacred'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'aacred')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aacred'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aacred')), 63))]",
                  "slug": "aacred"
                },
                "automationSchedule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'aasched'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'aasched')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aasched'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aasched')), 128))]",
                  "slug": "aasched"
                },
                "automationVariable": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'aavar'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'aavar')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aavar'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aavar')), 128))]",
                  "slug": "aavar"
                },
                "availabilitySet": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'avail'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'avail')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'avail'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'avail')), 80))]",
                  "slug": "avail"
                },
                "bastionHost": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'snap'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'snap')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'snap'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'snap')), 80))]",
                  "slug": "snap"
                },
                "batchAccount": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'ba'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'ba')), 24))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'ba'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'ba')), 24))]",
                  "slug": "ba"
                },
                "batchApplication": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'baapp'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'baapp')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'baapp'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'baapp')), 64))]",
                  "slug": "baapp"
                },
                "batchCertificate": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'bacert'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'bacert')), 45))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'bacert'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'bacert')), 45))]",
                  "slug": "bacert"
                },
                "batchPool": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'bapool'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'bapool')), 24))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'bapool'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'bapool')), 24))]",
                  "slug": "bapool"
                },
                "botChannelDirectline": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'botline'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'botline')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botline'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botline')), 64))]",
                  "slug": "botline"
                },
                "botChannelEmail": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'botmail'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'botmail')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botmail'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botmail')), 64))]",
                  "slug": "botmail"
                },
                "botChannelMsTeams": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'botteams'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'botteams')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botteams'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botteams')), 64))]",
                  "slug": "botteams"
                },
                "botChannelSlack": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'botslack'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'botslack')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botslack'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botslack')), 64))]",
                  "slug": "botslack"
                },
                "botChannelsRegistration": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'botchan'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'botchan')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botchan'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botchan')), 64))]",
                  "slug": "botchan"
                },
                "botConnection": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'botcon'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'botcon')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botcon'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'botcon')), 64))]",
                  "slug": "botcon"
                },
                "botWebApp": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'bot'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'bot')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'bot'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'bot')), 64))]",
                  "slug": "bot"
                },
                "cdnEndpoint": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'cdn'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'cdn')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cdn'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cdn')), 50))]",
                  "slug": "cdn"
                },
                "cdnProfile": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'cdnprof'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'cdnprof')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cdnprof'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cdnprof')), 260))]",
                  "slug": "cdnprof"
                },
                "cognitiveAccount": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'cog'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'cog')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cog'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cog')), 64))]",
                  "slug": "cog"
                },
                "containerGroup": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'cg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'cg')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cg')), 63))]",
                  "slug": "cg"
                },
                "containerRegistry": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'acr'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'acr')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'acr'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'acr')), 63))]",
                  "slug": "acr"
                },
                "containerRegistryWebhook": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'crwh'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'crwh')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'crwh'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'crwh')), 50))]",
                  "slug": "crwh"
                },
                "cosmosdbAccount": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'cosmos'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'cosmos')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cosmos'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'cosmos')), 63))]",
                  "slug": "cosmos"
                },
                "customProvider": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'prov'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'prov')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'prov'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'prov')), 64))]",
                  "slug": "prov"
                },
                "dashboard": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dsb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dsb')), 160))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dsb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dsb')), 160))]",
                  "slug": "dsb"
                },
                "dataFactory": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adf'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adf')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adf'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adf')), 63))]",
                  "slug": "adf"
                },
                "dataFactoryDatasetMysql": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfmysql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfmysql')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfmysql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfmysql')), 260))]",
                  "slug": "adfmysql"
                },
                "dataFactoryDatasetPostgresql": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfpsql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfpsql')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfpsql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfpsql')), 260))]",
                  "slug": "adfpsql"
                },
                "dataFactoryDatasetSqlServerTable": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfmssql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfmssql')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfmssql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfmssql')), 260))]",
                  "slug": "adfmssql"
                },
                "dataFactoryIntegrationRuntimeManaged": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfir'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfir')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfir'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfir')), 63))]",
                  "slug": "adfir"
                },
                "dataFactoryLinkedServiceDataLakeStorageGen2": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvst'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvst')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvst'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvst')), 260))]",
                  "slug": "adfsvst"
                },
                "dataFactoryLinkedServiceKeyVault": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvkv'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvkv')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvkv'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvkv')), 260))]",
                  "slug": "adfsvkv"
                },
                "dataFactoryLinkedServiceMysql": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvmysql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvmysql')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvmysql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvmysql')), 260))]",
                  "slug": "adfsvmysql"
                },
                "dataFactoryLinkedServicePostgresql": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvpsql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvpsql')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvpsql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvpsql')), 260))]",
                  "slug": "adfsvpsql"
                },
                "dataFactoryLinkedServiceSqlServer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvmssql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfsvmssql')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvmssql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfsvmssql')), 260))]",
                  "slug": "adfsvmssql"
                },
                "dataFactoryPipeline": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adfpl'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adfpl')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfpl'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adfpl')), 260))]",
                  "slug": "adfpl"
                },
                "dataFactoryTriggerSchedule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'adftg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'adftg')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adftg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'adftg')), 260))]",
                  "slug": "adftg"
                },
                "dataLakeAnalyticsAccount": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'dla'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'dla')), 24))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'dla'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'dla')), 24))]",
                  "slug": "dla"
                },
                "dataLakeAnalyticsFirewallRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dlfw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dlfw')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dlfw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dlfw')), 50))]",
                  "slug": "dlfw"
                },
                "dataLakeStore": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'dls'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'dls')), 24))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'dls'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'dls')), 24))]",
                  "slug": "dls"
                },
                "dataLakeStoreFirewallRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dlsfw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dlsfw')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dlsfw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dlsfw')), 50))]",
                  "slug": "dlsfw"
                },
                "databaseMigrationProject": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'migr'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'migr')), 57))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'migr'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'migr')), 57))]",
                  "slug": "migr"
                },
                "databaseMigrationService": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dms'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dms')), 62))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dms'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dms')), 62))]",
                  "slug": "dms"
                },
                "databricksWorkspace": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dbw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dbw')), 30))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dbw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dbw')), 30))]",
                  "slug": "dbw"
                },
                "devTestLab": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'lab'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'lab')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lab'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lab')), 50))]",
                  "slug": "lab"
                },
                "devTestLinuxVirtualMachine": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'labvm'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'labvm')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'labvm'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'labvm')), 64))]",
                  "slug": "labvm"
                },
                "devTestWindowsVirtualMachine": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'labvm'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'labvm')), 15))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'labvm'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'labvm')), 15))]",
                  "slug": "labvm"
                },
                "diskEncryptionSet": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'des'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'des')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'des'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'des')), 80))]",
                  "slug": "des"
                },
                "dnsZone": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dns'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dns')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dns'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dns')), 63))]",
                  "slug": "dns"
                },
                "eventGridDomain": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'egd'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'egd')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egd'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egd')), 50))]",
                  "slug": "egd"
                },
                "eventGridDomainTopic": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'egdt'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'egdt')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egdt'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egdt')), 50))]",
                  "slug": "egdt"
                },
                "eventGridEventSubscription": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'egs'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'egs')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egs'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egs')), 64))]",
                  "slug": "egs"
                },
                "eventGridTopic": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'egt'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'egt')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egt'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'egt')), 50))]",
                  "slug": "egt"
                },
                "eventHub": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'evh'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'evh')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'evh'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'evh')), 50))]",
                  "slug": "evh"
                },
                "eventHubAuthorizationRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'ehar'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'ehar')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehar'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehar')), 50))]",
                  "slug": "ehar"
                },
                "eventHubConsumerGroup": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'ehcg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'ehcg')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehcg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehcg')), 50))]",
                  "slug": "ehcg"
                },
                "eventHubNamespace": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'ehn'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'ehn')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehn'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehn')), 50))]",
                  "slug": "ehn"
                },
                "eventHubNamespaceAuthorizationRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'ehnar'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'ehnar')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehnar'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehnar')), 50))]",
                  "slug": "ehnar"
                },
                "eventHubNamespaceDisasterRecoveryConfig": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'ehdr'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'ehdr')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehdr'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ehdr')), 50))]",
                  "slug": "ehdr"
                },
                "expressRouteCircuit": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'erc'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'erc')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'erc'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'erc')), 80))]",
                  "slug": "erc"
                },
                "expressRouteGateway": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'ergw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'ergw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ergw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ergw')), 80))]",
                  "slug": "ergw"
                },
                "firewall": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'fw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'fw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'fw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'fw')), 80))]",
                  "slug": "fw"
                },
                "frontDoor": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'fd'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'fd')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'fd'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'fd')), 64))]",
                  "slug": "fd"
                },
                "frontDoorFirewallPolicy": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'fdfw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'fdfw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'fdfw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'fdfw')), 80))]",
                  "slug": "fdfw"
                },
                "functionApp": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'func'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'func')), 60))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'func'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'func')), 60))]",
                  "slug": "func"
                },
                "hdInsightHadoopCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'hadoop'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'hadoop')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'hadoop'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'hadoop')), 59))]",
                  "slug": "hadoop"
                },
                "hdInsightHbaseCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'hbase'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'hbase')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'hbase'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'hbase')), 59))]",
                  "slug": "hbase"
                },
                "hdInsightInteractiveQueryCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'iqr'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'iqr')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iqr'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iqr')), 59))]",
                  "slug": "iqr"
                },
                "hdInsightKafkaCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'kafka'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'kafka')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kafka'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kafka')), 59))]",
                  "slug": "kafka"
                },
                "hdInsightMlServicesCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mls'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mls')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mls'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mls')), 59))]",
                  "slug": "mls"
                },
                "hdInsightRserverCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'rsv'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'rsv')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rsv'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rsv')), 59))]",
                  "slug": "rsv"
                },
                "hdInsightSparkCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'spark'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'spark')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'spark'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'spark')), 59))]",
                  "slug": "spark"
                },
                "hdInsightStormCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'storm'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'storm')), 59))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'storm'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'storm')), 59))]",
                  "slug": "storm"
                },
                "image": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'img'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'img')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'img'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'img')), 80))]",
                  "slug": "img"
                },
                "iotCentralApplication": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'iotapp'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'iotapp')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iotapp'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iotapp')), 63))]",
                  "slug": "iotapp"
                },
                "iotHub": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'iot'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'iot')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iot'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iot')), 50))]",
                  "slug": "iot"
                },
                "iotHubConsumerGroup": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'iotcg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'iotcg')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iotcg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'iotcg')), 50))]",
                  "slug": "iotcg"
                },
                "iotHubDps": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dps'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dps')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dps'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dps')), 64))]",
                  "slug": "dps"
                },
                "iotHubDpsCertificate": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dpscert'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dpscert')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dpscert'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dpscert')), 64))]",
                  "slug": "dpscert"
                },
                "keyVault": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'kv'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'kv')), 24))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kv'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kv')), 24))]",
                  "slug": "kv"
                },
                "keyVaultCertificate": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'kvc'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'kvc')), 127))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kvc'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kvc')), 127))]",
                  "slug": "kvc"
                },
                "keyVaultKey": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'kvk'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'kvk')), 127))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kvk'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kvk')), 127))]",
                  "slug": "kvk"
                },
                "keyVaultSecret": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'kvs'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'kvs')), 127))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kvs'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kvs')), 127))]",
                  "slug": "kvs"
                },
                "kubernetesCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'aks'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'aks')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aks'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'aks')), 63))]",
                  "slug": "aks"
                },
                "kustoCluster": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'kc'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'kc')), 22))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'kc'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'kc')), 22))]",
                  "slug": "kc"
                },
                "kustoDatabase": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'kdb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'kdb')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kdb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kdb')), 260))]",
                  "slug": "kdb"
                },
                "kustoEventHubDataConnection": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'kehc'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'kehc')), 40))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kehc'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'kehc')), 40))]",
                  "slug": "kehc"
                },
                "loadBalancer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'lb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'lb')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lb')), 80))]",
                  "slug": "lb"
                },
                "loadBalancerNatRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'lbnatrl'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'lbnatrl')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lbnatrl'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lbnatrl')), 80))]",
                  "slug": "lbnatrl"
                },
                "linuxVirtualMachine": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vm'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vm')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vm'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vm')), 64))]",
                  "slug": "vm"
                },
                "linuxVirtualMachineScaleSet": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vmss'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vmss')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vmss'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vmss')), 64))]",
                  "slug": "vmss"
                },
                "localNetworkGateway": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'lgw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'lgw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lgw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'lgw')), 80))]",
                  "slug": "lgw"
                },
                "logAnalyticsWorkspace": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'log'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'log')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'log'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'log')), 63))]",
                  "slug": "log"
                },
                "machineLearningWorkspace": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mlw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mlw')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mlw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mlw')), 260))]",
                  "slug": "mlw"
                },
                "managedDisk": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dsk'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dsk')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dsk'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dsk')), 80))]",
                  "slug": "dsk"
                },
                "mapsAccount": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'map'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'map')), 98))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'map'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'map')), 98))]",
                  "slug": "map"
                },
                "mariadbDatabase": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mariadb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mariadb')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mariadb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mariadb')), 63))]",
                  "slug": "mariadb"
                },
                "mariadbFirewallRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mariafw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mariafw')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mariafw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mariafw')), 128))]",
                  "slug": "mariafw"
                },
                "mariadbServer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'maria'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'maria')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'maria'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'maria')), 63))]",
                  "slug": "maria"
                },
                "mariadbVirtualNetworkRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mariavn'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mariavn')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mariavn'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mariavn')), 128))]",
                  "slug": "mariavn"
                },
                "mssqlDatabase": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sqldb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sqldb')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqldb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqldb')), 128))]",
                  "slug": "sqldb"
                },
                "mssqlElasticpool": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sqlep'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sqlep')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlep'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlep')), 128))]",
                  "slug": "sqlep"
                },
                "mssqlServer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sql')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sql')), 63))]",
                  "slug": "sql"
                },
                "mysqlDatabase": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mysqldb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mysqldb')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysqldb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysqldb')), 63))]",
                  "slug": "mysqldb"
                },
                "mysqlFirewallRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mysqlfw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mysqlfw')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysqlfw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysqlfw')), 128))]",
                  "slug": "mysqlfw"
                },
                "mysqlServer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mysql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mysql')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysql')), 63))]",
                  "slug": "mysql"
                },
                "mysqlVirtualNetworkRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'mysqlvn'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'mysqlvn')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysqlvn'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'mysqlvn')), 128))]",
                  "slug": "mysqlvn"
                },
                "networkInterface": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'nic'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'nic')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nic'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nic')), 80))]",
                  "slug": "nic"
                },
                "networkSecurityGroup": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'nsg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'nsg')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nsg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nsg')), 80))]",
                  "slug": "nsg"
                },
                "networkSecurityGroupRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'nsgr'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'nsgr')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nsgr'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nsgr')), 80))]",
                  "slug": "nsgr"
                },
                "networkSecurityRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'nsgr'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'nsgr')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nsgr'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nsgr')), 80))]",
                  "slug": "nsgr"
                },
                "networkWatcher": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'nw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'nw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nw')), 80))]",
                  "slug": "nw"
                },
                "notificationHub": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'nh'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'nh')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nh'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'nh')), 260))]",
                  "slug": "nh"
                },
                "notificationHubAuthorizationRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dnsrec'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dnsrec')), 256))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dnsrec'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dnsrec')), 256))]",
                  "slug": "dnsrec"
                },
                "notificationHubNamespace": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dnsrec'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dnsrec')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dnsrec'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dnsrec')), 50))]",
                  "slug": "dnsrec"
                },
                "pointToSiteVpnGateway": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vpngw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vpngw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vpngw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vpngw')), 80))]",
                  "slug": "vpngw"
                },
                "postgresqlDatabase": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'psqldb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'psqldb')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psqldb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psqldb')), 63))]",
                  "slug": "psqldb"
                },
                "postgresqlFirewallRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'psqlfw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'psqlfw')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psqlfw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psqlfw')), 128))]",
                  "slug": "psqlfw"
                },
                "postgresqlServer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'psql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'psql')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psql')), 63))]",
                  "slug": "psql"
                },
                "postgresqlVirtualNetworkRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'psqlvn'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'psqlvn')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psqlvn'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'psqlvn')), 128))]",
                  "slug": "psqlvn"
                },
                "powerbiEmbedded": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'pbi'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'pbi')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pbi'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pbi')), 63))]",
                  "slug": "pbi"
                },
                "privateDnsZone": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'pdns'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'pdns')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pdns'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pdns')), 63))]",
                  "slug": "pdns"
                },
                "publicIp": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'pip'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'pip')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pip'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pip')), 80))]",
                  "slug": "pip"
                },
                "publicIpPrefix": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'pippf'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'pippf')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pippf'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'pippf')), 80))]",
                  "slug": "pippf"
                },
                "redisCache": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'redis'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'redis')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'redis'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'redis')), 63))]",
                  "slug": "redis"
                },
                "redisFirewallRule": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'redisfw'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'redisfw')), 256))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'redisfw'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'redisfw')), 256))]",
                  "slug": "redisfw"
                },
                "relayHybridConnection": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'rlhc'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'rlhc')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rlhc'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rlhc')), 260))]",
                  "slug": "rlhc"
                },
                "relayNamespace": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'rln'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'rln')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rln'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rln')), 50))]",
                  "slug": "rln"
                },
                "resourceGroup": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'rg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'rg')), 90))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rg')), 90))]",
                  "slug": "rg"
                },
                "roleAssignment": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'ra'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'ra')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ra'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'ra')), 64))]",
                  "slug": "ra"
                },
                "roleDefinition": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'rd'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'rd')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rd'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rd')), 64))]",
                  "slug": "rd"
                },
                "route": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'rt'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'rt')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rt'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'rt')), 80))]",
                  "slug": "rt"
                },
                "routeTable": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'route'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'route')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'route'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'route')), 80))]",
                  "slug": "route"
                },
                "serviceFabricCluster": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sf'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sf')), 23))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sf'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sf')), 23))]",
                  "slug": "sf"
                },
                "serviceBusNamespace": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sb'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sb')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sb'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sb')), 50))]",
                  "slug": "sb"
                },
                "serviceBusNamespaceAuthorizationRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sbar'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sbar')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbar'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbar')), 50))]",
                  "slug": "sbar"
                },
                "serviceBusQueue": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sbq'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sbq')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbq'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbq')), 260))]",
                  "slug": "sbq"
                },
                "serviceBusQueueAuthorizationRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sbqar'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sbqar')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbqar'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbqar')), 50))]",
                  "slug": "sbqar"
                },
                "serviceBusSubscription": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sbs'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sbs')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbs'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbs')), 50))]",
                  "slug": "sbs"
                },
                "serviceBusSubscriptionRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sbsr'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sbsr')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbsr'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbsr')), 50))]",
                  "slug": "sbsr"
                },
                "serviceBusTopic": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sbt'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sbt')), 260))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbt'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sbt')), 260))]",
                  "slug": "sbt"
                },
                "serviceBusTopicAuthorizationRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'dnsrec'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'dnsrec')), 50))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dnsrec'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'dnsrec')), 50))]",
                  "slug": "dnsrec"
                },
                "sharedImage": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'si'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'si')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'si'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'si')), 80))]",
                  "slug": "si"
                },
                "sharedImageGallery": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'sig'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'sig')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'sig'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'sig')), 80))]",
                  "slug": "sig"
                },
                "signalrService": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sgnlr'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sgnlr')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sgnlr'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sgnlr')), 63))]",
                  "slug": "sgnlr"
                },
                "snapshots": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'snap'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'snap')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'snap'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'snap')), 80))]",
                  "slug": "snap"
                },
                "sqlElasticpool": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sqlep'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sqlep')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlep'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlep')), 128))]",
                  "slug": "sqlep"
                },
                "sqlFailoverGroup": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sqlfg'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sqlfg')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlfg'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlfg')), 63))]",
                  "slug": "sqlfg"
                },
                "sqlFirewallRule": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sqlfw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sqlfw')), 128))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlfw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sqlfw')), 128))]",
                  "slug": "sqlfw"
                },
                "sqlServer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sql')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sql')), 63))]",
                  "slug": "sql"
                },
                "storageAccount": {
                  "name": "[substring(replace(variables('nameSafeTemplate'), variables('placeholder'), 'st'), 0, min(length(replace(variables('nameSafeTemplate'), variables('placeholder'), 'st')), 24))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'st'), 0, min(length(replace(variables('nameUniqueSafeTemplate'), variables('placeholder'), 'st')), 24))]",
                  "slug": "st"
                },
                "storageBlob": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'blob'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'blob')), 1024))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'blob'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'blob')), 1024))]",
                  "slug": "blob"
                },
                "storageContainer": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'stct'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'stct')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stct'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stct')), 63))]",
                  "slug": "stct"
                },
                "storageDataLakeGen2Filesystem": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'stdl'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'stdl')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stdl'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stdl')), 63))]",
                  "slug": "stdl"
                },
                "storageQueue": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'stq'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'stq')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stq'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stq')), 63))]",
                  "slug": "stq"
                },
                "storageShare": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sts'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sts')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sts'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sts')), 63))]",
                  "slug": "sts"
                },
                "storageShareDirectory": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'sts'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'sts')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sts'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'sts')), 63))]",
                  "slug": "sts"
                },
                "storageTable": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'stt'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'stt')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stt'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'stt')), 63))]",
                  "slug": "stt"
                },
                "streamAnalyticsFunctionJavascriptUdf": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asafunc'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asafunc')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asafunc'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asafunc')), 63))]",
                  "slug": "asafunc"
                },
                "streamAnalyticsJob": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asa'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asa')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asa'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asa')), 63))]",
                  "slug": "asa"
                },
                "streamAnalyticsOutputBlob": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaoblob'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaoblob')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaoblob'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaoblob')), 63))]",
                  "slug": "asaoblob"
                },
                "streamAnalyticsOutputEventHub": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaoeh'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaoeh')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaoeh'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaoeh')), 63))]",
                  "slug": "asaoeh"
                },
                "streamAnalyticsOutputMssql": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaomssql'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaomssql')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaomssql'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaomssql')), 63))]",
                  "slug": "asaomssql"
                },
                "streamAnalyticsOutputServiceBusQueue": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaosbq'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaosbq')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaosbq'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaosbq')), 63))]",
                  "slug": "asaosbq"
                },
                "streamAnalyticsOutputServiceBusTopic": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaosbt'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaosbt')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaosbt'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaosbt')), 63))]",
                  "slug": "asaosbt"
                },
                "streamAnalyticsReferenceInputBlob": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asarblob'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asarblob')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asarblob'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asarblob')), 63))]",
                  "slug": "asarblob"
                },
                "streamAnalyticsStreamInputBlob": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaiblob'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaiblob')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaiblob'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaiblob')), 63))]",
                  "slug": "asaiblob"
                },
                "streamAnalyticsStreamInputEventHub": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaieh'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaieh')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaieh'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaieh')), 63))]",
                  "slug": "asaieh"
                },
                "streamAnalyticsStreamInputIotHub": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'asaiiot'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'asaiiot')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaiiot'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'asaiiot')), 63))]",
                  "slug": "asaiiot"
                },
                "subnet": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'snet'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'snet')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'snet'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'snet')), 80))]",
                  "slug": "snet"
                },
                "templateDeployment": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'deploy'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'deploy')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'deploy'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'deploy')), 64))]",
                  "slug": "deploy"
                },
                "trafficManagerProfile": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'traf'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'traf')), 63))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'traf'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'traf')), 63))]",
                  "slug": "traf"
                },
                "virtualMachine": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vm'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vm')), 15))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vm'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vm')), 15))]",
                  "slug": "vm"
                },
                "virtualMachineScaleSet": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vmss'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vmss')), 15))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vmss'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vmss')), 15))]",
                  "slug": "vmss"
                },
                "virtualNetwork": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vnet'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vnet')), 64))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vnet'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vnet')), 64))]",
                  "slug": "vnet"
                },
                "virtualNetworkGateway": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vgw'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vgw')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vgw'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vgw')), 80))]",
                  "slug": "vgw"
                },
                "virtualNetworkPeering": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vpeer'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vpeer')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vpeer'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vpeer')), 80))]",
                  "slug": "vpeer"
                },
                "virtualWan": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vwan'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vwan')), 80))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vwan'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vwan')), 80))]",
                  "slug": "vwan"
                },
                "windowsVirtualMachine": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vm'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vm')), 15))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vm'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vm')), 15))]",
                  "slug": "vm"
                },
                "windowsVirtualMachineScaleSet": {
                  "name": "[substring(replace(variables('nameTemplate'), variables('placeholder'), 'vmss'), 0, min(length(replace(variables('nameTemplate'), variables('placeholder'), 'vmss')), 15))]",
                  "nameUnique": "[substring(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vmss'), 0, min(length(replace(variables('nameUniqueTemplate'), variables('placeholder'), 'vmss')), 15))]",
                  "slug": "vmss"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "MainDeployment",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "naming": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'NamingDeployment'), '2019-10-01').outputs.names.value]"
          },
          "vnet": {
            "value": "[parameters('vnet')]"
          },
          "jumphostAdministratorPassword": {
            "value": "[parameters('jumphostAdministratorPassword')]"
          },
          "tags": {
            "value": "[variables('defaultTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.412.5873",
              "templateHash": "7155512637946585296"
            }
          },
          "parameters": {
            "naming": {
              "type": "object"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object"
            },
            "vnet": {
              "type": "object"
            },
            "appServicePlanSkuName": {
              "type": "string",
              "defaultValue": "P1v3",
              "allowedValues": [
                "S1",
                "S2",
                "S3",
                "P1v3",
                "P2v3",
                "P3v3"
              ]
            },
            "jumphostAdministratorPassword": {
              "type": "secureString"
            }
          },
          "functions": [],
          "variables": {
            "resourceNames": {
              "appServicePlan": "[parameters('naming').appServicePlan.name]",
              "frontendWebApp": "[replace(parameters('naming').appService.name, format('{0}-', parameters('naming').appService.slug), format('{0}-frontend-', parameters('naming').appService.slug))]",
              "backendWebApp": "[replace(parameters('naming').appService.name, format('{0}-', parameters('naming').appService.slug), format('{0}-backend-', parameters('naming').appService.slug))]",
              "storageAccount": "[parameters('naming').storageAccount.nameUnique]",
              "keyVault": "[parameters('naming').keyVault.nameUnique]",
              "redis": "[parameters('naming').redisCache.name]",
              "jumphostVirtualMachine": "[parameters('naming').windowsVirtualMachine.name]"
            },
            "secretNames": {
              "dataStorageConnectionString": "dataStorageConnectionString",
              "redisConnectionString": "redisConnectionString"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[variables('resourceNames').appServicePlan]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('appServicePlanSkuName')]",
                "tier": "[if(equals(substring(parameters('appServicePlanSkuName'), 0, 1), 'S'), 'Standard', 'PremiumV3')]"
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "storage-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "kind": {
                    "value": "StorageV2"
                  },
                  "skuName": {
                    "value": "Standard_LRS"
                  },
                  "name": {
                    "value": "[variables('resourceNames').storageAccount]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "10087932830382673342"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "StorageV2",
                      "allowedValues": [
                        "BlobStorage",
                        "BlockBlobStorage",
                        "FileStorage",
                        "Storage",
                        "StorageV2"
                      ]
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "Standard_LRS",
                      "allowedValues": [
                        "Premium_LRS",
                        "Premium_ZRS",
                        "Standard_LRS",
                        "Standard_GRS",
                        "Standard_GZRS",
                        "Standard_RAGRS",
                        "Standard_RAGZRS",
                        "Standard_ZRS"
                      ]
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2019-06-01",
                      "name": "[toLower(replace(parameters('name'), '-', ''))]",
                      "location": "[parameters('location')]",
                      "kind": "[parameters('kind')]",
                      "sku": {
                        "name": "[parameters('skuName')]"
                      },
                      "tags": "[union(parameters('tags'), createObject('displayName', parameters('name')))]",
                      "properties": {
                        "accessTier": "Hot",
                        "supportsHttpsTrafficOnly": true
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', '')))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[toLower(replace(parameters('name'), '-', ''))]"
                    },
                    "primaryKey": {
                      "type": "string",
                      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', ''))), '2019-06-01').keys[0].value]"
                    },
                    "primaryEndpoints": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', '')))).primaryEndpoints]"
                    },
                    "connectionString": {
                      "type": "string",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', toLower(replace(parameters('name'), '-', '')), listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', ''))), '2019-06-01').keys[0].value)]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "frontendWebApp-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('resourceNames').frontendWebApp]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "appServicePlanId": {
                    "value": "[resourceId('Microsoft.Web/serverfarms', variables('resourceNames').appServicePlan)]"
                  },
                  "subnetIdForIntegration": {
                    "value": "[parameters('vnet').appServiceSnetId]"
                  },
                  "managedIdentity": {
                    "value": true
                  },
                  "appSettings": {
                    "value": [
                      {
                        "name": "StorageConnection",
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2019-10-01').outputs.connectionString.value]"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "2276143316644629462"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "appSettings": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Whether to create a managed identity for the web app -defaults to 'false'"
                      }
                    },
                    "subnetIdForIntegration": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The subnet Id to integrate the web app with -optional"
                      }
                    },
                    "appDeployRepoUrl": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The Git repository url to deploy the application from -optional"
                      }
                    },
                    "appDeployBranch": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The Git repository branch to deploy the application from -optional"
                      }
                    }
                  },
                  "functions": [],
                  "variables": {
                    "webAppInsName": "[format('appins-{0}', parameters('name'))]",
                    "createSourceControl": "[not(empty(parameters('appDeployRepoUrl')))]",
                    "createNetworkConfig": "[not(empty(parameters('subnetIdForIntegration')))]",
                    "networkConfigAppSettings": "[if(variables('createNetworkConfig'), createArray(createObject('name', 'WEBSITE_VNET_ROUTE_ALL', 'value', '1'), createObject('name', 'WEBSITE_DNS_SERVER', 'value', '168.63.129.16')), createArray())]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      },
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "siteConfig": {
                          "appSettings": "[concat(createArray(createObject('name', 'WEBSITE_NODE_DEFAULT_VERSION', 'value', '~10'), createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Resources/deployments', variables('webAppInsName')), '2019-10-01').outputs.instrumentationKey.value), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', format('InstrumentationKey={0}', reference(resourceId('Microsoft.Resources/deployments', variables('webAppInsName')), '2019-10-01').outputs.instrumentationKey.value))), variables('networkConfigAppSettings'), parameters('appSettings'))]"
                        },
                        "httpsOnly": true
                      },
                      "tags": "[union(createObject(format('hidden-related:{0}', parameters('appServicePlanId')), 'Resource'), parameters('tags'))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('webAppInsName'))]"
                      ]
                    },
                    {
                      "condition": "[variables('createNetworkConfig')]",
                      "type": "Microsoft.Web/sites/networkConfig",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/VirtualNetwork', parameters('name'))]",
                      "properties": {
                        "subnetResourceId": "[parameters('subnetIdForIntegration')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[variables('createSourceControl')]",
                      "type": "Microsoft.Web/sites/sourcecontrols",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/web', parameters('name'))]",
                      "properties": {
                        "branch": "[parameters('appDeployBranch')]",
                        "repoUrl": "[parameters('appDeployRepoUrl')]",
                        "isManualIntegration": true
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[variables('webAppInsName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('webAppInsName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "project": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "2094614431639799121"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "project": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "functions": [],
                          "variables": {
                            "workspaceName": "[format('log-{0}', parameters('name'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.OperationalInsights/workspaces",
                              "apiVersion": "2020-08-01",
                              "name": "[variables('workspaceName')]",
                              "location": "[parameters('location')]",
                              "tags": "[union(parameters('tags'), createObject('displayName', variables('workspaceName'), 'projectName', parameters('project')))]",
                              "properties": {
                                "retentionInDays": 90,
                                "sku": {
                                  "name": "PerGB2018"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Insights/components",
                              "apiVersion": "2020-02-02-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "kind": "web",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "Application_Type": "web",
                                "Request_Source": "rest",
                                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                            },
                            "instrumentationKey": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name'))).InstrumentationKey]"
                            },
                            "workspaceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "appServicePlanId": {
                      "type": "string",
                      "value": "[parameters('appServicePlanId')]"
                    },
                    "identity": {
                      "type": "object",
                      "value": "[if(parameters('managedIdentity'), createObject('tenantId', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2020-06-01', 'full').identity.tenantId, 'principalId', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2020-06-01', 'full').identity.principalId, 'type', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2020-06-01', 'full').identity.type), createObject())]"
                    },
                    "applicationInsights": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('webAppInsName')), '2019-10-01').outputs]"
                    },
                    "siteHostName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name'))).defaultHostName]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('resourceNames').appServicePlan)]",
                "[resourceId('Microsoft.Resources/deployments', 'storage-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "backendWebApp-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('resourceNames').backendWebApp]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "appServicePlanId": {
                    "value": "[resourceId('Microsoft.Web/serverfarms', variables('resourceNames').appServicePlan)]"
                  },
                  "subnetIdForIntegration": {
                    "value": "[parameters('vnet').appServiceSnetId]"
                  },
                  "managedIdentity": {
                    "value": true
                  },
                  "appSettings": {
                    "value": [
                      {
                        "name": "StorageConnection",
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2019-10-01').outputs.connectionString.value]"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "2276143316644629462"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "appSettings": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Whether to create a managed identity for the web app -defaults to 'false'"
                      }
                    },
                    "subnetIdForIntegration": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The subnet Id to integrate the web app with -optional"
                      }
                    },
                    "appDeployRepoUrl": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The Git repository url to deploy the application from -optional"
                      }
                    },
                    "appDeployBranch": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The Git repository branch to deploy the application from -optional"
                      }
                    }
                  },
                  "functions": [],
                  "variables": {
                    "webAppInsName": "[format('appins-{0}', parameters('name'))]",
                    "createSourceControl": "[not(empty(parameters('appDeployRepoUrl')))]",
                    "createNetworkConfig": "[not(empty(parameters('subnetIdForIntegration')))]",
                    "networkConfigAppSettings": "[if(variables('createNetworkConfig'), createArray(createObject('name', 'WEBSITE_VNET_ROUTE_ALL', 'value', '1'), createObject('name', 'WEBSITE_DNS_SERVER', 'value', '168.63.129.16')), createArray())]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      },
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "siteConfig": {
                          "appSettings": "[concat(createArray(createObject('name', 'WEBSITE_NODE_DEFAULT_VERSION', 'value', '~10'), createObject('name', 'APPINSIGHTS_INSTRUMENTATIONKEY', 'value', reference(resourceId('Microsoft.Resources/deployments', variables('webAppInsName')), '2019-10-01').outputs.instrumentationKey.value), createObject('name', 'APPLICATIONINSIGHTS_CONNECTION_STRING', 'value', format('InstrumentationKey={0}', reference(resourceId('Microsoft.Resources/deployments', variables('webAppInsName')), '2019-10-01').outputs.instrumentationKey.value))), variables('networkConfigAppSettings'), parameters('appSettings'))]"
                        },
                        "httpsOnly": true
                      },
                      "tags": "[union(createObject(format('hidden-related:{0}', parameters('appServicePlanId')), 'Resource'), parameters('tags'))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', variables('webAppInsName'))]"
                      ]
                    },
                    {
                      "condition": "[variables('createNetworkConfig')]",
                      "type": "Microsoft.Web/sites/networkConfig",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/VirtualNetwork', parameters('name'))]",
                      "properties": {
                        "subnetResourceId": "[parameters('subnetIdForIntegration')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[variables('createSourceControl')]",
                      "type": "Microsoft.Web/sites/sourcecontrols",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/web', parameters('name'))]",
                      "properties": {
                        "branch": "[parameters('appDeployBranch')]",
                        "repoUrl": "[parameters('appDeployRepoUrl')]",
                        "isManualIntegration": true
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[variables('webAppInsName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('webAppInsName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "project": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "2094614431639799121"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "project": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "functions": [],
                          "variables": {
                            "workspaceName": "[format('log-{0}', parameters('name'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.OperationalInsights/workspaces",
                              "apiVersion": "2020-08-01",
                              "name": "[variables('workspaceName')]",
                              "location": "[parameters('location')]",
                              "tags": "[union(parameters('tags'), createObject('displayName', variables('workspaceName'), 'projectName', parameters('project')))]",
                              "properties": {
                                "retentionInDays": 90,
                                "sku": {
                                  "name": "PerGB2018"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Insights/components",
                              "apiVersion": "2020-02-02-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "kind": "web",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "Application_Type": "web",
                                "Request_Source": "rest",
                                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                            },
                            "instrumentationKey": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name'))).InstrumentationKey]"
                            },
                            "workspaceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "appServicePlanId": {
                      "type": "string",
                      "value": "[parameters('appServicePlanId')]"
                    },
                    "identity": {
                      "type": "object",
                      "value": "[if(parameters('managedIdentity'), createObject('tenantId', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2020-06-01', 'full').identity.tenantId, 'principalId', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2020-06-01', 'full').identity.principalId, 'type', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2020-06-01', 'full').identity.type), createObject())]"
                    },
                    "applicationInsights": {
                      "type": "object",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('webAppInsName')), '2019-10-01').outputs]"
                    },
                    "siteHostName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name'))).defaultHostName]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('resourceNames').appServicePlan)]",
                "[resourceId('Microsoft.Resources/deployments', 'storage-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "websitesPrivateDnsZone-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "privatelink.azurewebsites.net"
                  },
                  "vnetIds": {
                    "value": [
                      "[parameters('vnet').vnetId]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "3966493551297709831"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "registrationEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "vnetIds": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "Global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "condition": "[not(empty(parameters('vnetIds')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[format('PrvDnsZoneLinks-Deployment-{0}', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "privateDnsZoneName": {
                            "value": "[parameters('name')]"
                          },
                          "vnetIds": {
                            "value": "[parameters('vnetIds')]"
                          },
                          "registrationEnabled": {
                            "value": "[parameters('registrationEnabled')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "2570058785726452531"
                            }
                          },
                          "parameters": {
                            "privateDnsZoneName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "registrationEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "vnetIds": {
                              "type": "array"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "copy": {
                                "name": "privateDnsZoneLinks",
                                "count": "[length(parameters('vnetIds'))]"
                              },
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), copyIndex())]",
                              "location": "Global",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "registrationEnabled": "[parameters('registrationEnabled')]",
                                "virtualNetwork": {
                                  "id": "[parameters('vnetIds')[copyIndex()]]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ids": {
                              "type": "array",
                              "copy": {
                                "count": "[length(range(0, length(parameters('vnetIds'))))]",
                                "input": "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', split(format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), range(0, length(parameters('vnetIds')))[copyIndex()]), '/')[0], split(format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), range(0, length(parameters('vnetIds')))[copyIndex()]), '/')[1])]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                    },
                    "linkIds": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('PrvDnsZoneLinks-Deployment-{0}', parameters('name'))), '2019-10-01').outputs.ids.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "frontendPrivateEndpoint-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('pe-{0}', reference(resourceId('Microsoft.Resources/deployments', 'frontendWebApp-deployment'), '2019-10-01').outputs.name.value)]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "privateDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'websitesPrivateDnsZone-deployment'), '2019-10-01').outputs.id.value]"
                  },
                  "privateLinkServiceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'frontendWebApp-deployment'), '2019-10-01').outputs.id.value]"
                  },
                  "subnetId": {
                    "value": "[parameters('vnet').privateEndpointsSnetId]"
                  },
                  "subResource": {
                    "value": "sites"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "9621705175810082112"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "privateDnsZoneId": {
                      "type": "string"
                    },
                    "subResource": {
                      "type": "string",
                      "allowedValues": [
                        "sites",
                        "sqlServer",
                        "mysqlServer",
                        "blob",
                        "file",
                        "queue",
                        "redisCache",
                        "namespace",
                        "Sql",
                        "vault"
                      ]
                    }
                  },
                  "functions": [],
                  "variables": {
                    "privateLinkConnectionName": "[format('prvlnk-{0}', parameters('name'))]",
                    "privateDnsZoneConfigName": "[format('prvZoneConfig-{0}', parameters('name'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('privateLinkConnectionName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('subResource')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/dnsgroupname', parameters('name'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('privateDnsZoneConfigName')]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'frontendWebApp-deployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'websitesPrivateDnsZone-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "backendPrivateEndpoint-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('pe-{0}', reference(resourceId('Microsoft.Resources/deployments', 'backendWebApp-deployment'), '2019-10-01').outputs.name.value)]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "privateDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'websitesPrivateDnsZone-deployment'), '2019-10-01').outputs.id.value]"
                  },
                  "privateLinkServiceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'backendWebApp-deployment'), '2019-10-01').outputs.id.value]"
                  },
                  "subnetId": {
                    "value": "[parameters('vnet').privateEndpointsSnetId]"
                  },
                  "subResource": {
                    "value": "sites"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "9621705175810082112"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "privateDnsZoneId": {
                      "type": "string"
                    },
                    "subResource": {
                      "type": "string",
                      "allowedValues": [
                        "sites",
                        "sqlServer",
                        "mysqlServer",
                        "blob",
                        "file",
                        "queue",
                        "redisCache",
                        "namespace",
                        "Sql",
                        "vault"
                      ]
                    }
                  },
                  "functions": [],
                  "variables": {
                    "privateLinkConnectionName": "[format('prvlnk-{0}', parameters('name'))]",
                    "privateDnsZoneConfigName": "[format('prvZoneConfig-{0}', parameters('name'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('privateLinkConnectionName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('subResource')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/dnsgroupname', parameters('name'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('privateDnsZoneConfigName')]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'backendWebApp-deployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'websitesPrivateDnsZone-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "redis-deployments",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('resourceNames').redis]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "6759063770923722903"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "skuFamily": {
                      "type": "string",
                      "defaultValue": "C",
                      "allowedValues": [
                        "C",
                        "P"
                      ]
                    },
                    "skuCapacity": {
                      "type": "int",
                      "defaultValue": 1,
                      "allowedValues": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ]
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Cache/redis",
                      "apiVersion": "2020-12-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "capacity": "[parameters('skuCapacity')]",
                          "family": "[parameters('skuFamily')]",
                          "name": "[parameters('skuName')]"
                        },
                        "publicNetworkAccess": "Disabled"
                      },
                      "tags": "[parameters('tags')]"
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Cache/redis', parameters('name'))]"
                    },
                    "accessKeys": {
                      "type": "object",
                      "value": "[listKeys(resourceId('Microsoft.Cache/redis', parameters('name')), '2020-12-01')]"
                    },
                    "connectionString": {
                      "type": "string",
                      "value": "[format('{0}.redis.cache.windows.net,abortConnect=false,ssl=true,password={1}', parameters('name'), listKeys(resourceId('Microsoft.Cache/redis', parameters('name')), '2020-12-01').primaryKey)]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "redisPrivateDnsZone-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "privatelink.redis.cache.windows.net"
                  },
                  "vnetIds": {
                    "value": [
                      "[parameters('vnet').vnetId]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "3966493551297709831"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "registrationEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "vnetIds": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "Global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "condition": "[not(empty(parameters('vnetIds')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[format('PrvDnsZoneLinks-Deployment-{0}', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "privateDnsZoneName": {
                            "value": "[parameters('name')]"
                          },
                          "vnetIds": {
                            "value": "[parameters('vnetIds')]"
                          },
                          "registrationEnabled": {
                            "value": "[parameters('registrationEnabled')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "2570058785726452531"
                            }
                          },
                          "parameters": {
                            "privateDnsZoneName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "registrationEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "vnetIds": {
                              "type": "array"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "copy": {
                                "name": "privateDnsZoneLinks",
                                "count": "[length(parameters('vnetIds'))]"
                              },
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), copyIndex())]",
                              "location": "Global",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "registrationEnabled": "[parameters('registrationEnabled')]",
                                "virtualNetwork": {
                                  "id": "[parameters('vnetIds')[copyIndex()]]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ids": {
                              "type": "array",
                              "copy": {
                                "count": "[length(range(0, length(parameters('vnetIds'))))]",
                                "input": "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', split(format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), range(0, length(parameters('vnetIds')))[copyIndex()]), '/')[0], split(format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), range(0, length(parameters('vnetIds')))[copyIndex()]), '/')[1])]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                    },
                    "linkIds": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('PrvDnsZoneLinks-Deployment-{0}', parameters('name'))), '2019-10-01').outputs.ids.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "redisPrivateEndpoint-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[format('pe-{0}', variables('resourceNames').redis)]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "privateDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'redisPrivateDnsZone-deployment'), '2019-10-01').outputs.id.value]"
                  },
                  "privateLinkServiceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'redis-deployments'), '2019-10-01').outputs.id.value]"
                  },
                  "subnetId": {
                    "value": "[parameters('vnet').privateEndpointsSnetId]"
                  },
                  "subResource": {
                    "value": "redisCache"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "9621705175810082112"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "privateDnsZoneId": {
                      "type": "string"
                    },
                    "subResource": {
                      "type": "string",
                      "allowedValues": [
                        "sites",
                        "sqlServer",
                        "mysqlServer",
                        "blob",
                        "file",
                        "queue",
                        "redisCache",
                        "namespace",
                        "Sql",
                        "vault"
                      ]
                    }
                  },
                  "functions": [],
                  "variables": {
                    "privateLinkConnectionName": "[format('prvlnk-{0}', parameters('name'))]",
                    "privateDnsZoneConfigName": "[format('prvZoneConfig-{0}', parameters('name'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('privateLinkConnectionName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('subResource')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/dnsgroupname', parameters('name'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('privateDnsZoneConfigName')]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'redis-deployments')]",
                "[resourceId('Microsoft.Resources/deployments', 'redisPrivateDnsZone-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "keyVault-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('resourceNames').keyVault]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "skuName": {
                    "value": "premium"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "accessPolicies": {
                    "value": [
                      {
                        "tenantId": "[reference(resourceId('Microsoft.Resources/deployments', 'frontendWebApp-deployment'), '2019-10-01').outputs.identity.value.tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Resources/deployments', 'frontendWebApp-deployment'), '2019-10-01').outputs.identity.value.principalId]",
                        "permissions": {
                          "secrets": [
                            "get"
                          ]
                        }
                      },
                      {
                        "tenantId": "[reference(resourceId('Microsoft.Resources/deployments', 'backendWebApp-deployment'), '2019-10-01').outputs.identity.value.tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Resources/deployments', 'backendWebApp-deployment'), '2019-10-01').outputs.identity.value.principalId]",
                        "permissions": {
                          "secrets": [
                            "get"
                          ]
                        }
                      }
                    ]
                  },
                  "secrets": {
                    "value": [
                      {
                        "name": "[variables('secretNames').dataStorageConnectionString]",
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2019-10-01').outputs.connectionString.value]"
                      },
                      {
                        "name": "[variables('secretNames').redisConnectionString]",
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', 'redis-deployments'), '2019-10-01').outputs.connectionString.value]"
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "4650952457690918461"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "standard",
                      "allowedValues": [
                        "standard",
                        "premium"
                      ]
                    },
                    "accessPolicies": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Array of access policy configurations, schema ref: https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults/accesspolicies?tabs=json#microsoftkeyvaultvaultsaccesspolicies-object"
                      }
                    },
                    "secrets": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Secrets array with name/value pairs"
                      }
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2019-09-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "tenantId": "[subscription().tenantId]",
                        "sku": {
                          "family": "A",
                          "name": "[parameters('skuName')]"
                        },
                        "accessPolicies": "[parameters('accessPolicies')]"
                      },
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "condition": "[not(empty(parameters('secrets')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "keyvault-secrets",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "keyVaultName": {
                            "value": "[parameters('name')]"
                          },
                          "secrets": {
                            "value": "[parameters('secrets')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "7904551245743431542"
                            }
                          },
                          "parameters": {
                            "keyVaultName": {
                              "type": "string"
                            },
                            "secrets": {
                              "type": "array",
                              "metadata": {
                                "description": "Array of name/value pairs"
                              }
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "copy": {
                                "name": "keyVaultSecrets",
                                "count": "[length(parameters('secrets'))]"
                              },
                              "type": "Microsoft.KeyVault/vaults/secrets",
                              "apiVersion": "2018-02-14",
                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secrets')[copyIndex()].name)]",
                              "properties": {
                                "value": "[parameters('secrets')[copyIndex()].value]"
                              }
                            }
                          ],
                          "outputs": {
                            "secrets": {
                              "type": "array",
                              "copy": {
                                "count": "[length(parameters('secrets'))]",
                                "input": {
                                  "id": "[resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}', parameters('keyVaultName'), parameters('secrets')[copyIndex()].name), '/')[0], split(format('{0}/{1}', parameters('keyVaultName'), parameters('secrets')[copyIndex()].name), '/')[1])]",
                                  "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('secrets')[copyIndex()].name)]",
                                  "type": "Microsoft.KeyVault/vaults/secrets",
                                  "props": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/{1}', parameters('keyVaultName'), parameters('secrets')[copyIndex()].name), '/')[0], split(format('{0}/{1}', parameters('keyVaultName'), parameters('secrets')[copyIndex()].name), '/')[1]))]",
                                  "reference": "[format('@Microsoft.KeyVault(VaultName={0};SecretName:{1}', parameters('keyVaultName'), format('{0}/{1}', parameters('keyVaultName'), parameters('secrets')[copyIndex()].name))]"
                                }
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "secrets": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault-secrets'), '2019-10-01').outputs.secrets.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'backendWebApp-deployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'frontendWebApp-deployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'redis-deployments')]",
                "[resourceId('Microsoft.Resources/deployments', 'storage-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "keyvaultPrivateDnsZone-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "privatelink.vaultcore.azure.net"
                  },
                  "vnetIds": {
                    "value": [
                      "[parameters('vnet').vnetId]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "3966493551297709831"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "registrationEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "vnetIds": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "Global",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "condition": "[not(empty(parameters('vnetIds')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[format('PrvDnsZoneLinks-Deployment-{0}', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "privateDnsZoneName": {
                            "value": "[parameters('name')]"
                          },
                          "vnetIds": {
                            "value": "[parameters('vnetIds')]"
                          },
                          "registrationEnabled": {
                            "value": "[parameters('registrationEnabled')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "2570058785726452531"
                            }
                          },
                          "parameters": {
                            "privateDnsZoneName": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "registrationEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "vnetIds": {
                              "type": "array"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "copy": {
                                "name": "privateDnsZoneLinks",
                                "count": "[length(parameters('vnetIds'))]"
                              },
                              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                              "apiVersion": "2020-06-01",
                              "name": "[format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), copyIndex())]",
                              "location": "Global",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "registrationEnabled": "[parameters('registrationEnabled')]",
                                "virtualNetwork": {
                                  "id": "[parameters('vnetIds')[copyIndex()]]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "ids": {
                              "type": "array",
                              "copy": {
                                "count": "[length(range(0, length(parameters('vnetIds'))))]",
                                "input": "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', split(format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), range(0, length(parameters('vnetIds')))[copyIndex()]), '/')[0], split(format('{0}/{1}-link-{2}', parameters('privateDnsZoneName'), parameters('privateDnsZoneName'), range(0, length(parameters('vnetIds')))[copyIndex()]), '/')[1])]"
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('name'))]"
                    },
                    "linkIds": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('PrvDnsZoneLinks-Deployment-{0}', parameters('name'))), '2019-10-01').outputs.ids.value]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "keyvaultPrivateEndpoint-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[format('pe-{0}', variables('resourceNames').keyVault)]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "privateDnsZoneId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvaultPrivateDnsZone-deployment'), '2019-10-01').outputs.id.value]"
                  },
                  "privateLinkServiceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault-deployment'), '2019-10-01').outputs.id.value]"
                  },
                  "subnetId": {
                    "value": "[parameters('vnet').privateEndpointsSnetId]"
                  },
                  "subResource": {
                    "value": "vault"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "9621705175810082112"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "privateLinkServiceId": {
                      "type": "string"
                    },
                    "privateDnsZoneId": {
                      "type": "string"
                    },
                    "subResource": {
                      "type": "string",
                      "allowedValues": [
                        "sites",
                        "sqlServer",
                        "mysqlServer",
                        "blob",
                        "file",
                        "queue",
                        "redisCache",
                        "namespace",
                        "Sql",
                        "vault"
                      ]
                    }
                  },
                  "functions": [],
                  "variables": {
                    "privateLinkConnectionName": "[format('prvlnk-{0}', parameters('name'))]",
                    "privateDnsZoneConfigName": "[format('prvZoneConfig-{0}', parameters('name'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        },
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('privateLinkConnectionName')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                              "groupIds": [
                                "[parameters('subResource')]"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/dnsgroupname', parameters('name'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[variables('privateDnsZoneConfigName')]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'keyVault-deployment')]",
                "[resourceId('Microsoft.Resources/deployments', 'keyvaultPrivateDnsZone-deployment')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "jumphost-deployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[variables('resourceNames').jumphostVirtualMachine]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "adminPassword": {
                    "value": "[parameters('jumphostAdministratorPassword')]"
                  },
                  "dnsLabelPrefix": {
                    "value": "[variables('resourceNames').jumphostVirtualMachine]"
                  },
                  "subnetId": {
                    "value": "[parameters('vnet').devOpsSnetId]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "18178544046546485419"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "maxLength": 15,
                      "minLength": 3
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "adminUserName": {
                      "type": "string",
                      "defaultValue": "vmadmin"
                    },
                    "adminPassword": {
                      "type": "secureString"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "dnsLabelPrefix": {
                      "type": "string"
                    },
                    "includePublicIp": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "includeVsCode": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "windowsOSVersion": {
                      "type": "string",
                      "defaultValue": "2019-Datacenter",
                      "metadata": {
                        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
                      },
                      "allowedValues": [
                        "2008-R2-SP1",
                        "2012-Datacenter",
                        "2012-R2-Datacenter",
                        "2016-Nano-Server",
                        "2016-Datacenter-with-Containers",
                        "2016-Datacenter",
                        "2019-Datacenter"
                      ]
                    },
                    "vmSize": {
                      "type": "string",
                      "defaultValue": "Standard_D2_v3",
                      "metadata": {
                        "description": "Size of the virtual machine."
                      }
                    }
                  },
                  "functions": [],
                  "variables": {
                    "resourceNames": {
                      "storageAccount": "[format('st{0}', parameters('name'))]",
                      "nic": "[format('nic-{0}', parameters('name'))]",
                      "publicIP": "[format('pip-{0}', parameters('name'))]",
                      "networkSecurityGroup": "default-nsg"
                    },
                    "nicIpConfigurationDefaults": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    },
                    "nicIpConfigurationWithPip": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIP)]"
                      }
                    },
                    "nicIpConfigurationProperties": "[if(parameters('includePublicIp'), variables('nicIpConfigurationDefaults'), union(variables('nicIpConfigurationDefaults'), variables('nicIpConfigurationWithPip')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('resourceNames').networkSecurityGroup]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "default-allow-3389",
                            "properties": {
                              "priority": 1000,
                              "access": "Allow",
                              "direction": "Inbound",
                              "destinationPortRange": "3389",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "condition": "[parameters('includePublicIp')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('resourceNames').publicIP]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "publicIPAllocationMethod": "Dynamic",
                        "dnsSettings": {
                          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2020-06-01",
                      "name": "[variables('resourceNames').nic]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": "[variables('nicIpConfigurationProperties')]"
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIP)]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        },
                        "osProfile": {
                          "computerName": "[parameters('name')]",
                          "adminUsername": "[parameters('adminUserName')]",
                          "adminPassword": "[parameters('adminPassword')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "[parameters('windowsOSVersion')]",
                            "version": "latest"
                          },
                          "osDisk": {
                            "createOption": "FromImage"
                          },
                          "dataDisks": [
                            {
                              "diskSizeGB": 1023,
                              "lun": 0,
                              "createOption": "Empty"
                            }
                          ]
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('resourceNames').nic)]"
                            }
                          ]
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[reference(resourceId('Microsoft.Resources/deployments', format('storageAccount-{0}', variables('resourceNames').storageAccount)), '2019-10-01').outputs.primaryEndpoints.value.blob]"
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', variables('resourceNames').nic)]",
                        "[resourceId('Microsoft.Resources/deployments', format('storageAccount-{0}', variables('resourceNames').storageAccount))]"
                      ]
                    },
                    {
                      "condition": "[parameters('includeVsCode')]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2020-12-01",
                      "name": "[format('{0}/config-app', parameters('name'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ./Install-VSCode.ps1 -EnableContextMenus",
                          "fileUris": [
                            "https://raw.githubusercontent.com/PowerShell/vscode-powershell/master/scripts/Install-VSCode.ps1"
                          ]
                        },
                        "protectedSettings": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[format('storageAccount-{0}', variables('resourceNames').storageAccount)]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[variables('resourceNames').storageAccount]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "10087932830382673342"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "StorageV2",
                              "allowedValues": [
                                "BlobStorage",
                                "BlockBlobStorage",
                                "FileStorage",
                                "Storage",
                                "StorageV2"
                              ]
                            },
                            "skuName": {
                              "type": "string",
                              "defaultValue": "Standard_LRS",
                              "allowedValues": [
                                "Premium_LRS",
                                "Premium_ZRS",
                                "Standard_LRS",
                                "Standard_GRS",
                                "Standard_GZRS",
                                "Standard_RAGRS",
                                "Standard_RAGZRS",
                                "Standard_ZRS"
                              ]
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "type": "Microsoft.Storage/storageAccounts",
                              "apiVersion": "2019-06-01",
                              "name": "[toLower(replace(parameters('name'), '-', ''))]",
                              "location": "[parameters('location')]",
                              "kind": "[parameters('kind')]",
                              "sku": {
                                "name": "[parameters('skuName')]"
                              },
                              "tags": "[union(parameters('tags'), createObject('displayName', parameters('name')))]",
                              "properties": {
                                "accessTier": "Hot",
                                "supportsHttpsTrafficOnly": true
                              }
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', '')))]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[toLower(replace(parameters('name'), '-', ''))]"
                            },
                            "primaryKey": {
                              "type": "string",
                              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', ''))), '2019-06-01').keys[0].value]"
                            },
                            "primaryEndpoints": {
                              "type": "object",
                              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', '')))).primaryEndpoints]"
                            },
                            "connectionString": {
                              "type": "string",
                              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', toLower(replace(parameters('name'), '-', '')), listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(replace(parameters('name'), '-', ''))), '2019-06-01').keys[0].value)]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "hostname": {
                      "type": "string",
                      "value": "[if(parameters('includePublicIp'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIP)).dnsSettings.fqdn, reference(resourceId('Microsoft.Network/publicIPAddresses', variables('resourceNames').publicIP)).ipAddress)]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2019-10-01').outputs.name.value]"
            },
            "frontendWebApp": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'frontendWebApp-deployment'), '2019-10-01').outputs]"
            },
            "backendWebApp": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'backendWebApp-deployment'), '2019-10-01').outputs]"
            },
            "jumphost": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'jumphost-deployment'), '2019-10-01').outputs]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'NamingDeployment')]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupId": {
      "type": "string",
      "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[parameters('resourceGroupName')]"
    },
    "frontendWebApp": {
      "type": "object",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'MainDeployment'), '2019-10-01').outputs.frontendWebApp.value]"
    },
    "backendWebApp": {
      "type": "object",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'MainDeployment'), '2019-10-01').outputs.backendWebApp.value]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'MainDeployment'), '2019-10-01').outputs.storageAccountName.value]"
    }
  }
}